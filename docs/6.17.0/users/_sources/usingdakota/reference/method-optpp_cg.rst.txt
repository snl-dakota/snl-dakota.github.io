.. _method-optpp_cg:

""""""""
optpp_cg
""""""""


A conjugate gradient optimization method



**Topics**


package_optpp, local_optimization_methods


.. toctree::
   :hidden:
   :maxdepth: 1

   method-optpp_cg-max_step
   method-optpp_cg-gradient_tolerance
   method-optpp_cg-max_iterations
   method-optpp_cg-convergence_tolerance
   method-optpp_cg-speculative
   method-optpp_cg-max_function_evaluations
   method-optpp_cg-scaling
   method-optpp_cg-model_pointer


**Specification**

- *Alias:* None

- *Arguments:* None


**Child Keywords:**

+-------------------------+--------------------+------------------------------+---------------------------------------------+
| Required/Optional       | Description of     | Dakota Keyword               | Dakota Keyword Description                  |
|                         | Group              |                              |                                             |
+=========================+====================+==============================+=============================================+
| Optional                                     | `max_step`__                 | Max change in design point                  |
+----------------------------------------------+------------------------------+---------------------------------------------+
| Optional                                     | `gradient_tolerance`__       | Stopping critiera based on L2 norm of       |
|                                              |                              | gradient                                    |
+----------------------------------------------+------------------------------+---------------------------------------------+
| Optional                                     | `max_iterations`__           | Number of iterations allowed for optimizers |
|                                              |                              | and adaptive UQ methods                     |
+----------------------------------------------+------------------------------+---------------------------------------------+
| Optional                                     | `convergence_tolerance`__    | Stopping criterion based on objective       |
|                                              |                              | function or statistics convergence          |
+----------------------------------------------+------------------------------+---------------------------------------------+
| Optional                                     | `speculative`__              | Compute speculative gradients               |
+----------------------------------------------+------------------------------+---------------------------------------------+
| Optional                                     | `max_function_evaluations`__ | Number of function evaluations allowed for  |
|                                              |                              | optimizers                                  |
+----------------------------------------------+------------------------------+---------------------------------------------+
| Optional                                     | `scaling`__                  | Turn on scaling for variables, responses,   |
|                                              |                              | and constraints                             |
+----------------------------------------------+------------------------------+---------------------------------------------+
| Optional                                     | `model_pointer`__            | Identifier for model block to be used by a  |
|                                              |                              | method                                      |
+----------------------------------------------+------------------------------+---------------------------------------------+

.. __: method-optpp_cg-max_step.html
__ method-optpp_cg-gradient_tolerance.html
__ method-optpp_cg-max_iterations.html
__ method-optpp_cg-convergence_tolerance.html
__ method-optpp_cg-speculative.html
__ method-optpp_cg-max_function_evaluations.html
__ method-optpp_cg-scaling.html
__ method-optpp_cg-model_pointer.html



**Description**


The conjugate gradient method is an implementation of the
Polak-Ribiere approach and handles only unconstrained problems.

See :ref:`topic-package_optpp<topic-package_optpp>` for info related to all ``optpp`` methods.

*Expected HDF5 Output*

If Dakota was built with HDF5 support and run with the
:ref:`environment-results_output-hdf5<environment-results_output-hdf5>` keyword, this method
writes the following results to HDF5:


- :ref:`hdf5_results-best_params<hdf5_results-best_params>`
- :ref:`hdf5_results-best_obj_fncs<hdf5_results-best_obj_fncs>` (when :ref:`responses-objective_functions<responses-objective_functions>`) are specified)
- :ref:`hdf5_results-calibration<hdf5_results-calibration>` (when :ref:`responses-calibration_terms<responses-calibration_terms>` are specified)


