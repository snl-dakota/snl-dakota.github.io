.. _method-surrogate_based_uq-import_approx_points_file-annotated:

"""""""""
annotated
"""""""""


Selects annotated tabular file format



**Topics**


file_formats


.. toctree::
   :hidden:
   :maxdepth: 1



**Specification**

- *Alias:* None

- *Arguments:* None

- *Default:* annotated format


**Description**


An annotated tabular file is a whitespace-separated text file with one
leading header row of comments/column labels.  Each subsequent row
contains an evaluation ID and interface ID, followed by data for
variables, or variables followed by responses, depending on context.

*Default Behavior*

By default, Dakota imports and exports tabular files in annotated
format.  The ``annotated`` keyword can be used to explicitly specify
this.

*Usage Tips*


- To specify pre-Dakota 6.1 tabular format, which did not include interface_id, specify ``custom_annotated`` ``header`` ``eval_id``
- Prior to October 2011, calibration and surrogate data files were in free-form format. They now default to ``annotated`` format, though ``freeform`` remains an option.
- When importing tabular data, a warning will be generated if a specific number of data are expected, but extra is found and an error generated when there is insufficient data.
- Some TPLs like SCOLIB and JEGA manage their own file I/O and only support the ``freeform`` option.



**Examples**


Export an annotated top-level tabular data file containing a header
row, leading eval_id and interface_id columns, and data for variables
and responses.  Input file fragment:

.. code-block::

    environment
      tabular_data
        tabular_data_file = 'dakota_summary.dat'
        annotated

Resulting tabular file:

.. code-block::

    eval_id interface             x1             x2         obj_fn nln_ineq_con_1 nln_ineq_con_2
    1            NO_ID            0.9            1.1         0.0002           0.26           0.76
    2            NO_ID        0.90009            1.1 0.0001996404857   0.2601620081       0.759955
    3            NO_ID        0.89991            1.1 0.0002003604863   0.2598380081       0.760045
    ...




