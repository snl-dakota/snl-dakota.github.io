.. _method-bayes_calibration-queso:

"""""
queso
"""""



Markov Chain Monte Carlo algorithms from the QUESO package




**Topics**



bayesian_calibration, package_queso



.. toctree::
   :hidden:
   :maxdepth: 1

   method-bayes_calibration-queso-chain_samples
   method-bayes_calibration-queso-seed
   method-bayes_calibration-queso-rng
   method-bayes_calibration-queso-emulator
   method-bayes_calibration-queso-standardized_space
   method-bayes_calibration-queso-logit_transform
   method-bayes_calibration-queso-export_chain_points_file
   method-bayes_calibration-queso-dram
   method-bayes_calibration-queso-delayed_rejection
   method-bayes_calibration-queso-adaptive_metropolis
   method-bayes_calibration-queso-metropolis_hastings
   method-bayes_calibration-queso-multilevel
   method-bayes_calibration-queso-pre_solve
   method-bayes_calibration-queso-proposal_covariance
   method-bayes_calibration-queso-options_file


**Specification**

- *Alias:* None

- *Arguments:* None


**Child Keywords:**

+-------------------------+--------------------+------------------------------+-----------------------------------------------+
| Required/Optional       | Description of     | Dakota Keyword               | Dakota Keyword Description                    |
|                         | Group              |                              |                                               |
+=========================+====================+==============================+===============================================+
| Required                                     | `chain_samples`__            | Number of Markov Chain Monte Carlo posterior  |
|                                              |                              | samples                                       |
+----------------------------------------------+------------------------------+-----------------------------------------------+
| Optional                                     | `seed`__                     | Seed of the random number generator           |
+----------------------------------------------+------------------------------+-----------------------------------------------+
| Optional                                     | `rng`__                      | Selection of a random number generator        |
+----------------------------------------------+------------------------------+-----------------------------------------------+
| Optional                                     | `emulator`__                 | Use an emulator or surrogate model to         |
|                                              |                              | evaluate the likelihood function              |
+----------------------------------------------+------------------------------+-----------------------------------------------+
| Optional                                     | `standardized_space`__       | Perform Bayesian inference in standardized    |
|                                              |                              | probability space                             |
+----------------------------------------------+------------------------------+-----------------------------------------------+
| Optional                                     | `logit_transform`__          | Utilize the logit transformation to reduce    |
|                                              |                              | sample rejection for bounded domains          |
+----------------------------------------------+------------------------------+-----------------------------------------------+
| Optional                                     | `export_chain_points_file`__ | Export the MCMC chain to the specified        |
|                                              |                              | filename                                      |
+-------------------------+--------------------+------------------------------+-----------------------------------------------+
| Optional (Choose One)   | MCMC Algorithm     | `dram`__                     | Use the DRAM MCMC algorithm                   |
|                         |                    +------------------------------+-----------------------------------------------+
|                         |                    | `delayed_rejection`__        | Use the Delayed Rejection MCMC algorithm      |
|                         |                    +------------------------------+-----------------------------------------------+
|                         |                    | `adaptive_metropolis`__      | Use the Adaptive Metropolis MCMC algorithm    |
|                         |                    +------------------------------+-----------------------------------------------+
|                         |                    | `metropolis_hastings`__      | Use the Metropolis-Hastings MCMC algorithm    |
|                         |                    +------------------------------+-----------------------------------------------+
|                         |                    | `multilevel`__               | Use the multilevel MCMC algorithm.            |
+-------------------------+--------------------+------------------------------+-----------------------------------------------+
| Optional                                     | `pre_solve`__                | Perform deterministic optimization for MAP    |
|                                              |                              | before Bayesian calibration                   |
+----------------------------------------------+------------------------------+-----------------------------------------------+
| Optional                                     | `proposal_covariance`__      | Defines the technique used to generate the    |
|                                              |                              | MCMC proposal covariance.                     |
+----------------------------------------------+------------------------------+-----------------------------------------------+
| Optional                                     | `options_file`__             | File containing advanced QUESO options        |
+----------------------------------------------+------------------------------+-----------------------------------------------+

.. __: method-bayes_calibration-queso-chain_samples.html
__ method-bayes_calibration-queso-seed.html
__ method-bayes_calibration-queso-rng.html
__ method-bayes_calibration-queso-emulator.html
__ method-bayes_calibration-queso-standardized_space.html
__ method-bayes_calibration-queso-logit_transform.html
__ method-bayes_calibration-queso-export_chain_points_file.html
__ method-bayes_calibration-queso-dram.html
__ method-bayes_calibration-queso-delayed_rejection.html
__ method-bayes_calibration-queso-adaptive_metropolis.html
__ method-bayes_calibration-queso-metropolis_hastings.html
__ method-bayes_calibration-queso-multilevel.html
__ method-bayes_calibration-queso-pre_solve.html
__ method-bayes_calibration-queso-proposal_covariance.html
__ method-bayes_calibration-queso-options_file.html



**Description**



The ``queso`` method supports the following MCMC algorithms: DRAM
(Delayed Rejection Adaptive Metropolis), delayed rejection (DR) only,
adaptive metropolis (AM) only, pure Metropolis Hasting (MH)s, and
multilevel (ML).

When calibrating fast-running simulation models, use of an emulator is
not typically warranted.  For slower models, using an emulator model
in the MCMC sampling will greatly improve the speed, since the Monte
Carlo Markov Chain will generate thousands of samples on the emulator
instead of the real simulation code.  An emulator may be specified
with the keyword ``emulator``, followed by a ``gaussian_process``
emulator, a ``pce`` emulator (polynomial chaos expansion), or a ``sc``
emulator (stochastic collocation). For the ``gaussian_process``
emulator, the user must specify whether to use the ``surfpack`` or
``dakota`` version of the Gaussian process.  The user can define the
number of samples ``build_samples`` from which the emulator should be
built. It is also possible to build the Gaussian process from points
read in from the ``import_points_file`` and to export
approximation-based sample evaluations using
``export_points_file``. For ``pce`` or ``sc``, the user can define a
``sparse_grid_level``.



There are a variety of ways the user can specify the proposal covariance matrix which
is very important in governing the samples generated in the chain.
The proposal covariance specifies the covariance structure of a multivariate normal distribution.
The user can specify ``proposal_covariance``, followed by ``derivatives``, ``prior``,
``values``, or ``filename``.  The derivative specification involves
forming the Hessian of the misfit function (the negative
log likelihood).  When derivative information is available inexpensively (e.g. from an emulator),
the derived-based proposal covariance forms a more
accurate proposal distribution, resulting in lower rejection rates and
faster chain mixing.  The prior setting involves constructing the proposal from the variance of the prior distributions of the parameters being calibrated.  When specifying the proposal covariance with values or from a file, the user
can choose to specify only the diagonals of the covariance matrix with ``diagonal`` or to specify the full covariance matrix with ``matrix``.

There are two other controls for QUESO.
The ``pre_solve`` option enables the user to start the chain at an optimal point, the
Maximum A Posteriori (MAP) point.  This is the point in parameter space that maximizes
the log posterior, (defined as the log-likelihood minus the log_prior).  A deterministic optimization method is used to obtain the MAP point, and the MCMC chain is then
started at the best point found in the optimization.
The second factor is a ``logit_transform``,
which performs an internal variable transformation from bounded domains to unbounded domains
in order to reduce sample rejection due to an out-of-bounds condition.

Note that as of Dakota 6.2, the field data capability may be used with QUESO.
That is, the user can specify field simulation data and field experiment data,
and Dakota will interpolate and provide the proper residuals to the Bayesian calibration.



