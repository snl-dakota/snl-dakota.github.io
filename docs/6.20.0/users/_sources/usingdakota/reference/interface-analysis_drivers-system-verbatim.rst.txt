.. _interface-analysis_drivers-system-verbatim:

""""""""
verbatim
""""""""


Specify the command Dakota uses to launch analysis driver(s) and filters


.. toctree::
   :hidden:
   :maxdepth: 1



**Specification**

- *Alias:* None

- *Arguments:* None

- *Default:* driver/filter invocation syntax augmented with file names


**Description**


The typical commands that Dakota uses to launch analysis drivers are:

..
   HIDDEN: khu 140925 - i removed references to filters, because I
   don't think they are working.

   .. code-block::

      > input_filter parameters_file_name results_file_name
      > analysis_driver parameters_file_name results_file_name
      > output_filter parameters_file_name results_file_name

.. code-block::

   > analysis_driver parameters_file_name results_file_name

Dakota will automatically arrange the executables and file names.

If the analysis driver requires a different syntax, the entire
command can be specified as the analysis driver and the
``verbatim`` keyword will tell Dakota to use this as the command.

Note, this will not allow the use of ``file_tag``, because the
exact command must be specified.

For additional information on invocation syntax, see the :ref:`Interfaces section <interfaces:main>`.



**Examples**


In the following example, the analysis_driver command is run without any edits from Dakota.

.. code-block::

    interface
      analysis_driver = "matlab -nodesktop -nojvm -r 'MatlabDriver_hardcoded_filenames; exit' "
        fork
          parameters_file 'params.in'
          results_file 'results.out'
          verbatim # this tells Dakota to fork the command exactly as written, instead of appending I/O filenames

The -r flag identifies the commands that will be run by matlab. The Matlab script has the
parameters_file and results_file names hardcoded, so no additional arguments are required.


