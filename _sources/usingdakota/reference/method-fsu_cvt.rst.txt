.. _method-fsu_cvt:

"""""""
fsu_cvt
"""""""


Design of Computer Experiments - Centroidal Voronoi Tessellation



**Topics**


package_fsudace, design_and_analysis_of_computer_experiments


.. toctree::
   :hidden:
   :maxdepth: 1

   method-fsu_cvt-samples
   method-fsu_cvt-seed
   method-fsu_cvt-fixed_seed
   method-fsu_cvt-latinize
   method-fsu_cvt-quality_metrics
   method-fsu_cvt-variance_based_decomp
   method-fsu_cvt-trial_type
   method-fsu_cvt-num_trials
   method-fsu_cvt-max_iterations
   method-fsu_cvt-model_pointer


**Specification**

- *Alias:* None

- *Arguments:* None


**Child Keywords:**

+-------------------------+--------------------+---------------------------+---------------------------------------------+
| Required/Optional       | Description of     | Dakota Keyword            | Dakota Keyword Description                  |
|                         | Group              |                           |                                             |
+=========================+====================+===========================+=============================================+
| Optional                                     | `samples`__               | Number of samples for sampling-based        |
|                                              |                           | methods                                     |
+----------------------------------------------+---------------------------+---------------------------------------------+
| Optional                                     | `seed`__                  | Seed of the random number generator         |
+----------------------------------------------+---------------------------+---------------------------------------------+
| Optional                                     | `fixed_seed`__            | Reuses the same seed value for multiple     |
|                                              |                           | random sampling sets                        |
+----------------------------------------------+---------------------------+---------------------------------------------+
| Optional                                     | `latinize`__              | Adjust samples to improve the discrepancy   |
|                                              |                           | of the marginal distributions               |
+----------------------------------------------+---------------------------+---------------------------------------------+
| Optional                                     | `quality_metrics`__       | Calculate metrics to assess the quality of  |
|                                              |                           | quasi-Monte Carlo samples                   |
+----------------------------------------------+---------------------------+---------------------------------------------+
| Optional                                     | `variance_based_decomp`__ | Activates global sensitivity analysis based |
|                                              |                           | on decomposition of response variance into  |
|                                              |                           | contributions from variables                |
+----------------------------------------------+---------------------------+---------------------------------------------+
| Optional                                     | `trial_type`__            | Specify how the trial samples are generated |
+----------------------------------------------+---------------------------+---------------------------------------------+
| Optional                                     | `num_trials`__            | The number of secondary sample points       |
|                                              |                           | generated to adjust the location of the     |
|                                              |                           | primary sample points                       |
+----------------------------------------------+---------------------------+---------------------------------------------+
| Optional                                     | `max_iterations`__        | Number of iterations allowed for optimizers |
|                                              |                           | and adaptive UQ methods                     |
+----------------------------------------------+---------------------------+---------------------------------------------+
| Optional                                     | `model_pointer`__         | Identifier for model block to be used by a  |
|                                              |                           | method                                      |
+----------------------------------------------+---------------------------+---------------------------------------------+

.. __: method-fsu_cvt-samples.html
__ method-fsu_cvt-seed.html
__ method-fsu_cvt-fixed_seed.html
__ method-fsu_cvt-latinize.html
__ method-fsu_cvt-quality_metrics.html
__ method-fsu_cvt-variance_based_decomp.html
__ method-fsu_cvt-trial_type.html
__ method-fsu_cvt-num_trials.html
__ method-fsu_cvt-max_iterations.html
__ method-fsu_cvt-model_pointer.html



**Description**


The FSU Centroidal Voronoi Tessellation method ( ``fsu_cvt``)
produces a set of sample points that are
(approximately) a Centroidal Voronoi Tessellation. The primary feature of
such a set of points is that they have good volumetric spacing; the points
tend to arrange themselves in a pattern of cells that are roughly the
same shape.

To produce this set of points, an almost arbitrary set of
initial points is chosen, and then an internal set of
iterations is carried out. These iterations repeatedly replace
the current set of sample points by an estimate
of the centroids of the corresponding Voronoi subregions.
:cite:p:`Du99`.

The user may generally ignore the details of this internal iteration. If
control is desired, however, there are a few variables with which the user
can influence the iteration.
The user may specify:

- :ref:`method-fsu_cvt-max_iterations<method-fsu_cvt-max_iterations>`, the number of iterations carried out
- :ref:`method-fsu_cvt-num_trials<method-fsu_cvt-num_trials>`, the number of secondary sample points generated to adjust the location of the primary sample points
- :ref:`method-fsu_cvt-trial_type<method-fsu_cvt-trial_type>`, which controls how these secondary sample points are generated

This method generates sets of uniform random variables on the
interval [0,1]. If the user specifies lower and upper bounds for a
variable, the [0,1] samples are mapped to the [lower, upper] interval.



**Theory**


This method is designed to generate samples with the goal of low discrepancy.
Discrepancy refers to the nonuniformity of the sample points
within the hypercube.

Discrepancy is defined as the difference between
the actual number and the expected number of points one would expect
in a particular set B (such as a hyper-rectangle within the unit
hypercube), maximized over all such sets.
Low discrepancy sequences tend to cover the
unit hypercube reasonably uniformly.

Centroidal Voronoi Tessellation
does very well volumetrically: it spaces the points fairly
equally throughout the space, so that the points cover the region
and are isotropically distributed with no directional bias in the
point placement. There are various measures of volumetric
uniformity which take into account the distances between
pairs of points, regularity measures, etc.
Note that Centroidal Voronoi Tessellation does not produce low-discrepancy sequences
in lower dimensions. The lower-dimension (such as 1-D)
projections of Centroidal Voronoi Tessellation can have high discrepancy.


